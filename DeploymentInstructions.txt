####################################################################################################
DEPLOY 2017.02.30 | Add 'Roles' table
####################################################################################################

1. Execute following SQL statements:

   CREATE TABLE `eda`.`roles` ( `Id` TINYINT NOT NULL , `Name` TINYTEXT NOT NULL , `Description` TINYTEXT NOT NULL , UNIQUE (`Id`)) ENGINE = InnoDB;
   INSERT INTO `eda`.`roles` (`Id`, `Name`) VALUES ('0', 'Суперадминистратор');
   INSERT INTO `eda`.`roles` (`Id`, `Name`) VALUES ('1', 'Администратор');
   INSERT INTO `eda`.`roles` (`Id`, `Name`) VALUES ('2', 'Пользователь');
   INSERT INTO `eda`.`roles` (`Id`, `Name`, `Description`) VALUES ('3', 'Демо-пользователь', 'Пользователь без возможности отправлять заказ');
   ALTER TABLE `users` ADD FOREIGN KEY (`RoleId`) REFERENCES `eda`.`roles`(`Id`) ON DELETE RESTRICT ON UPDATE RESTRICT;


####################################################################################################
DEPLOY 2017.02.27 | Add new Users characteristics ('CompanyId' and 'isActive')
####################################################################################################

1. Execute following SQL statement:

   ALTER TABLE `users` ADD `CompanyId` TINYINT NOT NULL DEFAULT '1' AFTER `Surname`;
   
2. Change values of `CompanyId` parameter to 0 for following UserId: 0, 1, 2

3. Execute following SQL statement:

   ALTER TABLE `users` ADD `isActive` BOOLEAN NOT NULL DEFAULT TRUE AFTER `Id`;
  
4. Set values if 'isActive' parameter to 0 for following UserId: 44, 49


####################################################################################################
DEPLOY 2017.01.15 | PASSWORD ENCRYPT
####################################################################################################

1. Export PROD 'users' table for backup

2. Update PROD with the latest source code from GitHub

3. Open '_run_once_crypt_password.php' in browser.
   Check in 'users' table that all passwords are encrypted

4. Remove '_run_once_crypt_password.php' file from the PROD/DEV file systems
   
4. Try to login to the site. Login should be successful

5. Switch emails in 'SendEmail.php' to PROD

####################################################################################################
DEPLOY 2017.01.02 | REMEMBER LATEST PAGE
####################################################################################################

1. Execute following SQL statement:

ALTER TABLE users ADD MenuFilter TINYTEXT NOT NULL AFTER Surname;

Discription: this will add new column 'MenuFilter' to the 'users' table

2. Update Production with the latest source code from GitHub

3. Perform 'Happy Path Test'

4. Switch emails in 'SendEmail.php' to Release

####################################################################################################
DEPLOY 2016.12.07 | MORE INFORMATION ABOUT USER ORDER
####################################################################################################

1. Execute following SQL statements:

ALTER TABLE orders ADD Date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP FIRST;
ALTER TABLE orders ADD Autofill BOOLEAN NOT NULL DEFAULT FALSE AFTER Count;

Description: this will allow to collect information about order:
  - date and time
  - type (manual/autofill)

2. Update Production with the latest source code from GitHub

####################################################################################################
DEPLOY 2016.12.03 | EXCEL
####################################################################################################

1. Backup whole 'xampp' folder

2. Execute following SQL statement:

INSERT INTO eda.users (Id, Login, Password, RoleId, Name, Surname, RestorePasswordGUID, ShowNotification, AutofillSetting_AutofillType, AutofillSetting_Company, AutofillSetting_OrderFirstDishes, AutofillSetting_OrderSecondDishes, AutofillSetting_OrderSalads, AutofillSetting_OrderDesserts) VALUES ('2', 'Bot', 'EdaBot', '2', 'Бот', 'Бот', '', '0', '0', '0', '0', '0', '0', '0');

Description: this will add Bot User

3. Execute following SQL statement:

CREATE TABLE eda.excel ( Id SMALLINT NOT NULL AUTO_INCREMENT , DateFirst DATE NOT NULL , DateLast DATE NOT NULL, Dates TINYTEXT NOT NULL , DaysCount TINYINT NOT NULL , Company TINYTEXT NOT NULL, WeekNumber TINYINT NOT NULL, DishesCount SMALLINT NOT NULL, OriginalFileName TINYTEXT NOT NULL , FileLocation TINYTEXT NOT NULL , Checksum TINYTEXT NOT NULL , UploadDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP , UploadedBy SMALLINT NOT NULL , PRIMARY KEY (Id)) ENGINE = InnoDB;

Description: This SQL statement creates table "excel" with the following columns:

 # | Column Name		|	Type
------------------------------------
 1 | Id					|	SMALLINT
 2 | DateFirst			|	DATE
 3 | DateLast			|	DATE
 4 | Days				|	TINYTEXT
 5 | DaysCount			|	TINYINT
 6 | Company			|	SMALLINT
 7 | WeekNumber			|	TINYINT
 8 | DishesCount		|	SMALLINT
 9 | OriginalFileName	|	TINYTEXT
10 | FileLocation		|	TINYTEXT
11 | Checksum			|	TINYTEXT
12 | UploadDate			|	DATETIME
13 | UploadedBy			|	SMALLINT

4. Get latest source code from the GitHub, copy it to 'htdocs'

5. Copy and rename /python/ParseAndAggregate.py -> /cgi-bin/ParseAndAggregate.cgi

6. Copy all files from 'python' folder to the PyCharm project and execute 'Evolution_20161203.py'

7. Perform 'Extended Happy Path Test'**

####################################################################################################
DEPLOY 2016.11.08 | 
####################################################################################################

1. Submit 'ParseAndAggregate.cgi' to the GitHub

2. Run GitHub and get latest source code

3. Copy 'ParseAndAggregate.cgi' to the 'cgi-bin' dir

4. Switch email recepients in 'SendEmail.php' to Release incl. VV

####################################################################################################
DEPLOY 2016.10.30 | WHAT'S NEW
####################################################################################################

1. Connect to the 'EDA' EC2 machine

2. Run GitHub and get latest source code

3. Copy files from GitHub temp dir to the 'htdocs' folder

4. Add VV recepient in SendEmail.php

5. Check 'print' functionality

6. Check 'what's new' page

7. Execute following SQL statement:

   UPDATE users
   SET ShowNotification = 1

8. Check 'what's new pop-up on start

####################################################################################################
DEPLOY 2016.10.08 | AUTOFILL
####################################################################################################

1. Get latest data from the GitHub

2. Replace following columns in 'users' table:

   Old columns:
     AutofillSetting_OrderInCimus
     AutofillSetting_OrderInAdam
     AutofillSetting_Rich
     AutofillSetting_FavoriteDishes

   New columns:
     AutofillSetting_AutofillType
     AutofillSetting_Company

3. Execute following SQL statements:

   UPDATE users
   SET ShowNotification = 1

   UPDATE users
   SET AutofillSetting_AutofillType = 0

   UPDATE users
   SET AutofillSetting_Company = 0

4. Check 'Autofill' functionality

5. a) Switch emails in 'SendEmail.php' to Debug
   b) Order some dishes
   c) Press 'Отправить заказ Серегю/Адаму' button
   d) Go to your mailbox, check that you receive both emails
   e) Open attached Excel files, check that ordered dishes are correct

6. Switch emails in 'SendEmail.php' to Release

####################################################################################################
VERIFICATIONS
####################################################################################################

* 'Happy Path Test'

Precondition: Switch email recepients to the Test in 'SendEmail.php'
Test:
   1. Login to the EDA site
   2. Order dishes by both companies
   3. Press 'Отправить...' button
   4. Check email box:
	  => Email box should contains two emails
   5. Open Excel files attached to the emails
	  => Dishes ordered on the website should be marked in the Excel files
Postexecution: Switch email recepients to the Production in 'SendEmail.php'

** 'Extended Happy Path Test'

1. Upload Excel file\files
   => Check, that uploaded dishes displayed on 'Menu' page
2. Perform 'Happy Path Test'